/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT	0
#define NMBRS	1
#define SIGNS	2
#define MEDIA	3

/ {
    macros {
        mcr_0: macros_0 {
            label = "MACROS_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp FSLH>;
        };

        mcr_1: macros_1 {
            label = "MACROS_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(FSLH)>;
        };

        mcr_2: macros_2 {
            label = "MACROS_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(N6)>;
        };

        mcr_3: macros_3 {
            label = "MACROS_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(N4)>;
        };

        mcr_4: macros_4 {
            label = "MACROS_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(N2)>;
        };

        mcr_5: macros_5 {
            label = "MACROS_5";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(N2)>;
        };

        mcr_6: macros_6 {
            label = "MACROS_6";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp SQT>;
        };

        mcr_7: macros_7 {
            label = "MACROS_7";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp RC(N1)>,
                <&macro_tap>,
                <&kp LS(GRAVE)>;
        };

        mcr_8: macros_8 {
            label = "MACROS_8";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(SQT)>;
        };

        mcr_9: macros_9 {
            label = "MACROS_9";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp GRAVE>;
        };

        mcr_10: macros_10 {
            label = "MACROS_10";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(N7)>;
        };

        mcr_11: macros_11 {
            label = "MACROS_11";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(N6)>;
        };

        mcr_12: macros_12 {
            label = "MACROS_12";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(N7)>;
        };

        mcr_13: macros_13 {
            label = "MACROS_13";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(N4)>;
        };

        mcr_15: macros_15 {
            label = "MACROS_15";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(BSLH)>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_caps {
            timeout-ms = <50>;
            key-positions = <24 35>;
            bindings = <&kp CAPSLOCK>;
        };

        printscreen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <0 11>;
        };

        /*
 		combo_bspc {
            timeout-ms = <30>;
            key-positions = <3 4>;
            bindings = <&kp BSPC>;
        };*/
    };
};

/ {
    behaviors {
        tdSlshGrave: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp GRAVE>;

            tapping-term-ms = <180>;
        };

        tdDotComma: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;
        };

        td_X_hard: td_X_hard {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_X_HARD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            tapping-term-ms = <180>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 ESC  &kp Q    &kp W     &kp E     &kp R      &kp T      &kp Y  &kp U        &kp I      &kp O       &kp P         &td_X_hard
&kp TAB    &kp A    &kp S     &kp D     &kp F      &kp G      &kp H  &kp J        &kp K      &kp L       &kp SEMI      &kp SQT
&kp LSHFT  &kp Z    &kp X     &kp C     &kp V      &kp B      &kp N  &kp M        &kp COMMA  &kp DOT     &tdSlshGrave  &mt RSHIFT BACKSLASH
&none      &kp DEL  &kp LGUI  &kp LALT  &kp SPACE  &kp LCTRL  &mo 1  &lt 2 SPACE  &kp RALT   &kp C_MENU  &kp BSPC      &kp RCTRL
            >;
        };

        numbers {
            bindings = <
&kp N0  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5  &kp N6     &kp N7    &kp N8    &kp N9        &kp N0     &kp DOT
&kp F1  &kp F2    &kp F3    &kp F4  &kp F5     &kp F6  &kp F7     &kp F8    &kp F9    &kp F10       &kp F11    &kp F12
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &kp ENTER  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans     &trans    &trans    &trans        &trans     &trans
            >;
        };

        signs {
            bindings = <
&kp LS(N3)  &kp LS(EQUAL)  &kp MINUS      &kp KP_SLASH  &mcr_8  &kp LS(SLASH)  &kp SLASH   &mcr_4  &mcr_10     &kp LS(N9)  &kp LS(N0)  &mcr_11
&kp LS(N5)  &mcr_12        &kp LS(MINUS)  &kp BSLH      &mcr_6  &mcr_3         &mcr_2      &mcr_7  &kp LS(N1)  &trans      &trans      &trans
&mcr_13     &trans         &kp EQUAL      &mcr_15       &mcr_5  &trans         &kp LS(N8)  &trans  &trans      &trans      &trans      &trans
&trans      &trans         &trans         &trans        &trans  &trans         &trans      &trans  &trans      &trans      &trans      &trans
            >;
        };

        media {
            bindings = <
&none        &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP    &kp HOME  &kp PAGE_UP    &kp INSERT  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9    &kp KP_MINUS  &kp KP_NUM
&trans       &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &kp END   &kp PAGE_DOWN  &kp DELETE  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6    &kp KP_PLUS   &trans
&trans       &trans                &trans             &trans    &trans         &trans      &trans           &kp KP_N1  &kp KP_N2  &kp KP_N3    &kp KP_ENTER  &trans
&bootloader  &sys_reset            &bt BT_CLR_ALL     &trans    &trans         &kp ENTER   &trans           &kp KP_N0  &trans     &tdDotComma  &trans        &trans
            >;
        };
    };
};
