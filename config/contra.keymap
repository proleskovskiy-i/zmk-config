/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */



#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



#define DEFAULT	0
#define NMBRS	1
#define SIGNS	2
#define MEDIA	3
#define CUSTOM  4
#define CUSTOM1 5
#define BT_CTRL	6



/ {
    behaviors {
// tilda switcher
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp GRAVE>;
        };
// dot comma switcher
		td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOT>, <&kp COMMA>;
        };
// russin hard sign
		td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;
        };
 // hold fix &lt NMBRS BSPC
         td_nmbrs_bspc: tap_dance_nmbrs_bspc {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_NMBRS_BSPC";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&lt NMBRS BSPC>, <&kp BSPC>;
        };
// hold fix &lt SIGNS SPACE
         td_signs_space: tap_dance_signs_space {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SIGNS_SPACE";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&lt SIGNS SPACE>, <&kp SPACE>;
        };       
    };
};	



/ {
    combos {
        compatible = "zmk,combos";
        combo_enter {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp ENTER>;
        };
		combo_caps {
            timeout-ms = <50>;
            key-positions = <24 35>;
            bindings = <&kp CAPSLOCK>;
        };
		combo_numlock {
            timeout-ms = <50>;
            key-positions = <39 44>;
            bindings = <&kp KP_NUMLOCK>;
        };
        combo_shift_enter {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp LS(ENTER)>;
        };
    };
};



/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&lt CUSTOM ESC 	&kp Q			&kp W			&kp E     		&kp R 			&kp T			&kp Y			&kp U			&kp I			&kp O			&kp P			&kp LEFT_BRACKET
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&kp TAB  		&kp A			&kp S			&kp D     		&kp F			&kp G			&kp H			&kp J			&kp K			&kp L			&kp SEMI		&kp SQT
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&kp LSHFT 		&kp Z			&kp X			&kp C     		&kp V			&kp B			&kp N			&td2			&kp COMMA		&kp DOT			&td0			&kp RSHFT 
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&mo MEDIA 		&kp DEL			&kp LGUI		&kp LALT  		 &kp SPACE		&kp LCTRL	&td_nmbrs_bspc &td_signs_space	 	&kp RALT		&kp K_CMENU		&mo CUSTOM1		&mo BT_CTRL
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            >;
        };

        numbers {
            bindings = <
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&td1			&kp N1			&kp N2			&kp N3			&kp N4			&kp N5			&kp N6			&kp EQUAL		&kp F1	    	&kp F2			&kp F3			&kp F4
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&kp KP_SLASH	&kp N7			&kp N8			&kp N9			&kp N0			&kp KP_MINUS	&kp PG_UP		&kp HOME		&kp F5			&kp F6			&kp F7			&kp F8
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&kp KP_MULTIPLY	&kp LEFT		&kp DOWN		&kp UP			&kp RIGHT		&kp KP_PLUS		&kp PG_DN		&kp END 		&kp F9			&kp F10			&kp F11			&kp F12
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&trans		&kp LC(LG(LEFT))	&kp LG(TAB)		&kp LA(F4)	&kp LC(LG(RIGHT))	&kp F2			&trans			&trans			&none			&none			&kp RSHFT		&kp RCTRL
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            >;
        };
		
        signs {
            bindings = <
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&kp LS(N3)  	&kp LS(EQUAL)	&kp MINUS		&kp FSLH		&trans			&trans			&trans			&trans			&trans		    &kp LS(N9)	    &kp LS(N0)  	&trans
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&kp LS(N5)	    &trans			&kp LS(MINUS)	&kp BSLH		&trans			&trans			&trans			&trans			&kp LS(N1)  	&none			&none			&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&kp EQUAL		&trans			&trans			&none			&kp LS(N8)  	&trans			&none			&none			&trans			&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&kp LALT		&trans			&kp LCTRL		&none			&none			&none			&none			&none			&none
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            >;
        };
	
        media {
            bindings = <
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&kp LC(N1)		&kp C_VOL_UP	&kp C_BRI_UP	&kp LC(LS(I))	&none			&none			&kp KP_NLCK		&kp KP_N7		&kp KP_N8		&kp KP_N9		&kp KP_MINUS	&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&kp LC(N2)		&kp C_VOL_DN	&kp C_BRI_DN	&kp LC(I)		&none			&none			&none			&kp KP_N4		&kp KP_N5		&kp KP_N6		&kp KP_PLUS 	&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&kp LC(N3)		&kp PSCRN		&kp K_CALC		&kp LC(O)		&none			&none			&none			&kp KP_N1		&kp KP_N2		&kp KP_N3		&kp KP_DIVIDE	&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&none	    	&none			&none			&kp KP_N0		&td1	    	&kp KP_EQUAL	&kp KP_MULTIPLY	&none
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            >;
        };
		
        custom {
            bindings = <
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&trans			&kp LALT		&kp LC(LS(I))	&kp LC(LS(E))	&none			&none			&none			&none			&none			&none			&none			&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&kp LC(I)		&none          	&none			&none			&none			&none			&none			&none			&none			&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&kp LS(TAB)     &kp TAB			&none			&none			&none			&none			&none			&none
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            >;
        };

        custom1 {
            bindings = <
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            >;
        };

        bt_control {
            bindings = <
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
//  |				|	device1		|	device2		|	device3		|	device4		|	device5		||				|				|				|				|				|				|
		&bt BT_CLR		&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4	&none			&none			&none			&none			&none			&bootloader
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&sys_reset
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none			&none
//  |				|				|				|				|				|				||				|				|				|				|				|				|
		&none			&none			&none			&none			&none			&none			&none			&none			&none   		&none   		&none			&none
//	|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            >;
        };
    };
};
