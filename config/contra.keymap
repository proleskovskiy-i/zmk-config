/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT	0
#define NMBRS	1
#define SIGNS	2
#define MEDIA	3
#define CUSTOM  4
#define CUSTOM1 5
#define BT_CTRL	6

/ {
    macros {
        mcr_0: macros_0 {
            label = "MACROS_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp FSLH>;
        };
        mcr_1: macros_1 {
            label = "MACROS_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(FSLH)>;
        };
        mcr_2: macros_2 {
            label = "MACROS_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(N6)>;
        };
        mcr_3: macros_3 {
            label = "MACROS_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(N4)>;
        };
        mcr_4: macros_4 {
            label = "MACROS_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(N2)>;
        };
        mcr_5: macros_5 {
            label = "MACROS_5";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(N2)>;
        };
        mcr_6: macros_6 {
            label = "MACROS_6";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp SQT>;
        };
        mcr_7: macros_7 {
            label = "MACROS_7";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp RC(N1)>,
                <&macro_tap>,
                <&kp LS(GRAVE)>;
        };
        mcr_8: macros_8 {
            label = "MACROS_8";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(SQT)>;
        };
        mcr_9: macros_9 {
            label = "MACROS_9";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp GRAVE>;
        };
        mcr_10: macros_10 {
            label = "MACROS_10";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N3)>, <&macro_tap>, <&kp LS(N7)>;
        };
        mcr_11: macros_11 {
            label = "MACROS_11";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(N6)>;
        };
        mcr_12: macros_12 {
            label = "MACROS_12";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(N7)>;
        };
        mcr_13: macros_13 {
            label = "MACROS_13";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(N4)>;
        };
        mcr_15: macros_15 {
            label = "MACROS_15";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(N1)>, <&macro_tap>, <&kp LS(BSLH)>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_enter {
            timeout-ms = <30>;
            key-positions = <17 18>;
            bindings = <&kp ENTER>;
        };

        combo_caps {
            timeout-ms = <50>;
            key-positions = <24 35>;
            bindings = <&kp CAPSLOCK>;
        };

        combo_numlock {
            timeout-ms = <50>;
            key-positions = <39 44>;
            bindings = <&kp KP_NUMLOCK>;
        };

        cb_e.. {
            bindings = <&kp GRAVE>;
            key-positions = <5 34>;
        };

        /*
 		combo_bspc {
            timeout-ms = <30>;
            key-positions = <3 4>;
            bindings = <&kp BSPC>;
        };*/
    };
};

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp GRAVE>;
        };
        tdDotComma: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;
        };
        tdDelBspc: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DEL>, <&kp BSPC>;
        };
        td_X_hard: td_X_hard {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_X_HARD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 ESC  &kp Q       &kp W     &kp E     &kp R      &kp T      &kp Y  &kp U        &kp I      &kp O        &kp P     &td_X_hard
&kp TAB    &kp A       &kp S     &kp D     &kp F      &kp G      &kp H  &kp J        &kp K      &kp L        &kp SEMI  &kp SQT
&kp LSHFT  &kp Z       &kp X     &kp C     &kp V      &kp B      &kp N  &kp M        &kp COMMA  &kp DOT      &kp FSLH  &kp RSHFT
&tog 3     &tdDelBspc  &kp LGUI  &kp LALT  &kp SPACE  &kp LCTRL  &mo 2  &lt 1 SPACE  &kp RALT   &kp K_CMENU  &kp BSPC  &kp ENTER
            >;
        };

        signs {
            bindings = <
&kp LS(N3)  &kp LS(EQUAL)  &kp MINUS      &kp KP_SLASH  &mcr_5  &kp LS(SLASH)  &kp SLASH   &mcr_4   &mcr_10     &kp LS(N9)  &kp LS(N0)  &mcr_11
&kp LS(N5)  &mcr_12        &kp LS(MINUS)  &kp BSLH      &mcr_8  &mcr_3         &mcr_2      &mcr_7   &kp LS(N1)  &trans      &trans      &trans
&trans      &trans         &kp EQUAL      &mcr_15       &mcr_6  &trans         &kp LS(N8)  &mcr_13  &trans      &trans      &trans      &trans
&trans      &trans         &trans         &trans        &trans  &trans         &trans      &trans   &trans      &trans      &trans      &trans
            >;
        };

        numbers {
            bindings = <
&kp GRAVE       &kp N1            &kp N2    &kp N3  &kp N4             &kp N5    &kp N6     &kp N7    &kp N8  &kp N9   &kp N0   &kp MINUS
&kp F1          &kp F2            &kp F3    &kp F4  &kp F5             &kp F6    &kp F7     &kp F8    &kp F9  &kp F10  &kp F11  &kp F12
&kp LEFT_SHIFT  &kp LEFT          &kp DOWN  &kp UP  &kp RIGHT          &kp PLUS  &kp EQUAL  &kp BSLH  &trans  &trans   &trans   &kp RSHIFT
&none           &kp LC(LG(LEFT))  &trans    &trans  &kp LC(LG(RIGHT))  &trans    &trans     &trans    &trans  &trans   &trans   &kp RCTRL
            >;
        };

        media {
            bindings = <
&trans            &kp C_VOL_UP  &kp C_BRI_UP     &kp HOME      &kp PAGE_UP     &kp INSERT  &kp KP_DIVIDE    &kp KP_N7  &kp KP_N8  &kp KP_N9    &kp KP_MINUS  &none
&kp LC(NUMBER_1)  &kp C_VOL_DN  &kp C_BRI_DN     &kp END       &kp PAGE_DOWN   &kp DELETE  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6    &kp KP_PLUS   &none
&kp LC(NUMBER_3)  &none         &kp PRINTSCREEN  &none         &none           &none       &none            &kp KP_N1  &kp KP_N2  &kp KP_N3    &none         &trans
&tog 3            &mo 4         &none            &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL   &trans           &kp KP_N0  &trans     &tdDotComma  &trans        &kp KP_ENTER
            >;
        };

        bt_control {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none  &none  &none  &none  &bootloader
&bt BT_CLR    &none         &none         &none         &none         &none  &none  &none  &none  &none  &none  &sys_reset
&none         &none         &none         &none         &none         &none  &none  &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none  &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
